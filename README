A simple multi-threaded proxy server with the following characteristics:
 - HTTP only.
 - No keep-alive
 - Opens a new connection to the target server every time a client
   connection requests for it.
 - No caching.
 - Supports UTF-8 URLs (not tested)
 - Supports GET, POST and all other methods.
 - Supports HTTP video streaming, for e.g., youtube.
 - Supports logging of HTTP traffic from both client and server side.
 - Supports reading of chunked transfer encoding. 
   In the log files, even though Transfer-Encoding might specify
   "chunked", the data logged would have been decoded for convenience.

Feel free to modify the code for your own use. 
But please acknowledge the original author. Thanks!

Building
=========
1) Make sure the javac binary is in your PATH environment variable.
2) Do a make in libjava dir to create libjava.jar
3) Do a make in the current dir to create proxy.jar

Run
=========
Command: java -jar proxy.jar [options]
options:
-t : Number of threads. Default is 3
-s : No logging. Default is to log
-n : Number of listen back log [Default=20]
-p : Listen port [Required]

Log files will be created as proxy.<thread-id>.<client/serv>.log
For e.g., proxy.0.client.log stores all traffic received from the client.

The headers shown in the log files are in unmodified form, and might not
be the exact headers sent to the client/server.

